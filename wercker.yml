box: "netmarkjp/golang-build:1.13"
build: 
  steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/heartbeatsjp/check_happo
    - script:
        name: "goimports"
        code: |
            GOFILES=$(glide novendor -x | grep -vE '^\.$' | while read line ; do find $line -name '*.go' -type f ;done ; ls *.go)
            goimports -d -e ${GOFILES}
            if [[ $(goimports -d -e ${GOFILES}) == "" ]]; then echo pass; else echo failed; exit 1; fi
    - script:
        name: "golint"
        code: |
            for d in $(glide novendor); do golint -set_exit_status $d; done
    - script:
        name: "go vet"
        code: "go vet ./..."
    - script:
        name: "go test"
        code: "go test ./..."
    - script:
        name: "gox"
        code: |
          gox -osarch="linux/amd64" -ldflags "-X main.Version=$(git describe --tags)" -output "${WERCKER_OUTPUT_DIR}/pkg/linux_amd64/check_happo"
    - script:
        name: "archive"
        code: |
            DIST_DIR="${WERCKER_OUTPUT_DIR:?}/dist"
            mkdir ${DIST_DIR:?} || true
            cd ${WERCKER_OUTPUT_DIR:?}/pkg
            find . -mindepth 1 -maxdepth 1 -type d | while read line; do tar zcfp ${DIST_DIR:?}/$line.tar.gz ${line:?} ; done
            cd ${DIST_DIR:?}
            md5sum * > MD5SUM
deploy:
    steps: 
        - tcnksm/ghr: 
            input: dist
            replace: true
            token: $GITHUB_TOKEN
